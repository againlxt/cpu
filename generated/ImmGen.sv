// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ImmGen(	// src/main/scala/idu/ImmGen.scala:6:7
  input  [11:0] io_iImm,	// src/main/scala/idu/ImmGen.scala:7:20
                io_sImm,	// src/main/scala/idu/ImmGen.scala:7:20
  input  [12:0] io_bImm,	// src/main/scala/idu/ImmGen.scala:7:20
  input  [31:0] io_uImm,	// src/main/scala/idu/ImmGen.scala:7:20
  input  [20:0] io_jImm,	// src/main/scala/idu/ImmGen.scala:7:20
  input  [2:0]  io_immType,	// src/main/scala/idu/ImmGen.scala:7:20
  output [31:0] io_imm	// src/main/scala/idu/ImmGen.scala:7:20
);

  wire [7:0][31:0] _GEN =
    {{32'h0},
     {32'h0},
     {{{11{io_jImm[20]}}, io_jImm}},
     {io_uImm},
     {{{19{io_bImm[12]}}, io_bImm}},
     {{{20{io_sImm[11]}}, io_sImm}},
     {{{20{io_iImm[11]}}, io_iImm}},
     {32'h0}};	// src/main/scala/chisel3/util/Mux.scala:126:16, src/main/scala/idu/ImmGen.scala:18:{30,35,47}, :19:{30,35,47}, :20:{30,35,47}, :22:{30,35,47}, :26:70, :27:78, :28:78, :29:78, :30:78
  assign io_imm = _GEN[io_immType];	// src/main/scala/chisel3/util/Mux.scala:126:16, src/main/scala/idu/ImmGen.scala:6:7, :26:70, :27:78, :28:78, :29:78, :30:78
endmodule


// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ALU(	// src/main/scala/exu/alu/ALU.scala:8:7
  input  [3:0]  io_aluCtr,	// src/main/scala/exu/alu/ALU.scala:9:20
  input  [31:0] io_srcAData,	// src/main/scala/exu/alu/ALU.scala:9:20
                io_srcBData,	// src/main/scala/exu/alu/ALU.scala:9:20
  output        io_less,	// src/main/scala/exu/alu/ALU.scala:9:20
                io_zero,	// src/main/scala/exu/alu/ALU.scala:9:20
  output [31:0] io_aluOut	// src/main/scala/exu/alu/ALU.scala:9:20
);

  wire             _aluAdder_io_carry;	// src/main/scala/exu/alu/ALU.scala:34:49
  wire             _aluAdder_io_overflow;	// src/main/scala/exu/alu/ALU.scala:34:49
  wire [31:0]      _aluAdder_io_result;	// src/main/scala/exu/alu/ALU.scala:34:49
  wire [31:0]      _shifter_io_dOut;	// src/main/scala/exu/alu/ALU.scala:27:57
  wire             _aluControl_io_aOrLCtr;	// src/main/scala/exu/alu/ALU.scala:19:49
  wire             _aluControl_io_lOrRCtr;	// src/main/scala/exu/alu/ALU.scala:19:49
  wire             _aluControl_io_uOrSCtr;	// src/main/scala/exu/alu/ALU.scala:19:49
  wire             _aluControl_io_subOrAddCtr;	// src/main/scala/exu/alu/ALU.scala:19:49
  wire             lessWire =
    _aluControl_io_uOrSCtr
      ? _aluAdder_io_carry ^ _aluControl_io_subOrAddCtr
      : _aluAdder_io_overflow ^ _aluAdder_io_result[31];	// src/main/scala/exu/alu/ALU.scala:19:49, :34:49, :43:{46,76}, :44:{77,88}
  wire [7:0][31:0] _GEN =
    {{io_srcAData & io_srcBData},
     {io_srcAData | io_srcBData},
     {_shifter_io_dOut},
     {io_srcAData ^ io_srcBData},
     {io_srcBData},
     {{31'h0, lessWire}},
     {_shifter_io_dOut},
     {_aluAdder_io_result}};	// src/main/scala/chisel3/util/Mux.scala:126:16, src/main/scala/exu/alu/ALU.scala:27:57, :34:49, :43:46, :47:{46,51}, :49:55, :50:55, :51:55, :53:29, :54:29, :55:29, :56:29, :57:29, :58:29, :59:29, :60:29
  ALUControl aluControl (	// src/main/scala/exu/alu/ALU.scala:19:49
    .io_aluCtr      (io_aluCtr),
    .io_aOrLCtr     (_aluControl_io_aOrLCtr),
    .io_lOrRCtr     (_aluControl_io_lOrRCtr),
    .io_uOrSCtr     (_aluControl_io_uOrSCtr),
    .io_subOrAddCtr (_aluControl_io_subOrAddCtr)
  );
  Shifter shifter (	// src/main/scala/exu/alu/ALU.scala:27:57
    .io_lOrR  (_aluControl_io_lOrRCtr),	// src/main/scala/exu/alu/ALU.scala:19:49
    .io_aOrL  (_aluControl_io_aOrLCtr),	// src/main/scala/exu/alu/ALU.scala:19:49
    .io_dIn   (io_srcAData),
    .io_shamt (io_srcBData[4:0]),	// src/main/scala/exu/alu/ALU.scala:31:55
    .io_dOut  (_shifter_io_dOut)
  );
  ALUAdder aluAdder (	// src/main/scala/exu/alu/ALU.scala:34:49
    .io_subOrAdd (_aluControl_io_subOrAddCtr),	// src/main/scala/exu/alu/ALU.scala:19:49
    .io_srcAData (io_srcAData),
    .io_srcBData (io_srcBData),
    .io_carry    (_aluAdder_io_carry),
    .io_zero     (io_zero),
    .io_overflow (_aluAdder_io_overflow),
    .io_result   (_aluAdder_io_result)
  );
  assign io_less = lessWire;	// src/main/scala/exu/alu/ALU.scala:8:7, :43:46
  assign io_aluOut = _GEN[io_aluCtr[2:0]];	// src/main/scala/chisel3/util/Mux.scala:126:16, src/main/scala/exu/alu/ALU.scala:8:7, :21:52, :53:29, :54:29, :55:29, :56:29, :57:29, :58:29, :59:29, :60:29
endmodule

